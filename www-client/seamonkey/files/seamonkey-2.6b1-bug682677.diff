Mozilla Bug 682677 - Eliminated direct access to mInfo->pixel_depth, which is not allowed in libpng15.  We access pixel_depth via png_get_IHDR() instead; r=joedrew

--- comm-beta/mozilla/modules/libpr0n/decoders/nsICODecoder.cpp
+++ comm-beta/mozilla/modules/libpr0n/decoders/nsICODecoder.cpp
@@ -380,18 +380,17 @@
       return;
     }
     mPos += aCount;
     aBuffer += aCount;
     aCount = 0;
 
     // Raymond Chen says that 32bpp only are valid PNG ICOs
     // http://blogs.msdn.com/b/oldnewthing/archive/2010/10/22/10079192.aspx
-    if (static_cast<nsPNGDecoder*>(mContainedDecoder.get())->HasValidInfo() && 
-        static_cast<nsPNGDecoder*>(mContainedDecoder.get())->GetPixelDepth() != 32) {
+    if (!static_cast<nsPNGDecoder*>(mContainedDecoder.get())->IsValidICO()) {
       PostDataError();
     }
     return;
   }
 
   // We've processed all of the icon dir entries and are within the 
   // bitmap info size
   if (!mIsPNG && mCurrIcon == mNumIcons && mPos >= mImageOffset && 
--- comm-beta/mozilla/modules/libpr0n/decoders/nsPNGDecoder.h
+++ comm-beta/mozilla/modules/libpr0n/decoders/nsPNGDecoder.h
@@ -69,28 +69,35 @@
   void CreateFrame(png_uint_32 x_offset, png_uint_32 y_offset,
                    PRInt32 width, PRInt32 height,
                    gfxASurface::gfxImageFormat format);
   void SetAnimFrameInfo();
 
   void EndImageFrame();
 
   // Checks if the info header contains valid information
-  bool HasValidInfo() const 
+  // Check if PNG is valid ICO (32bpp RGBA)
+  // http://blogs.msdn.com/b/oldnewthing/archive/2010/10/22/10079192.aspx
+  bool IsValidICO() const
   {
-    return mInfo && mInfo->valid;
-  }
+    png_uint_32
+	png_width,  // Unused
+	png_height; // Unused
 
-  // Obtain the pixel depth if available or 0 otherwise
-  PRInt32 GetPixelDepth() const
-  {
-    if (!mInfo) {
-      return 0;
+    int png_bit_depth,
+	png_color_type;
+
+    if (png_get_IHDR(mPNG, mInfo, &png_width, &png_height, &png_bit_depth,
+		     &png_color_type, NULL, NULL, NULL)) {
+
+      return (png_color_type == PNG_COLOR_TYPE_RGB_ALPHA &&
+    	      png_bit_depth == 8);
+    } else {
+      return false;
     }
-    return mInfo->pixel_depth;
   }
 
 public:
   png_structp mPNG;
   png_infop mInfo;
   nsIntRect mFrameRect;
   PRUint8 *mCMSLine;
   PRUint8 *interlacebuf;
