--- comm-beta/mozilla/config/Makefile.in
+++ comm-beta/mozilla/config/Makefile.in
@@ -98,6 +98,7 @@
 		-DMOZ_NATIVE_JPEG=$(MOZ_NATIVE_JPEG) \
 		-DMOZ_NATIVE_LIBEVENT=$(MOZ_NATIVE_LIBEVENT) \
 		-DMOZ_NATIVE_LIBVPX=$(MOZ_NATIVE_LIBVPX) \
+		-DMOZ_NATIVE_ICU=$(MOZ_NATIVE_ICU) \
 		$(srcdir)/system-headers | $(PERL) $(topsrcdir)/nsprpub/config/make-system-wrappers.pl system_wrappers
 	$(INSTALL) system_wrappers $(DIST)
 
--- comm-beta/mozilla/config/system-headers
+++ comm-beta/mozilla/config/system-headers
@@ -1132,3 +1132,16 @@
 spawn.h
 err.h
 xlocale.h
+#if MOZ_NATIVE_ICU==1
+unicode/locid.h
+unicode/numsys.h
+unicode/ucal.h
+unicode/uclean.h
+unicode/ucol.h
+unicode/udat.h
+unicode/udatpg.h
+unicode/uenum.h
+unicode/unum.h
+unicode/ustring.h
+unicode/utypes.h
+#endif
--- comm-beta/mozilla/configure.in
+++ comm-beta/mozilla/configure.in
@@ -4113,6 +4113,22 @@
 fi
 
 dnl ========================================================
+dnl System ICU Support
+dnl ========================================================
+MOZ_NATIVE_ICU=
+MOZ_ARG_WITH_BOOL(system-icu,
+[  --with-system-icu
+			Use system ICU (located with pkgconfig)],
+    MOZ_NATIVE_ICU=1)
+
+if test -n "$MOZ_NATIVE_ICU"; then
+    PKG_CHECK_MODULES(MOZ_ICU, icu-i18n >= 50.1)
+    MOZ_JS_STATIC_LIBS="$MOZ_JS_STATIC_LIBS $MOZ_ICU_LIBS"
+fi
+
+AC_SUBST(MOZ_NATIVE_ICU)
+
+dnl ========================================================
 dnl Java SDK support
 dnl ========================================================
 
--- comm-beta/mozilla/js/src/config/Makefile.in
+++ comm-beta/mozilla/js/src/config/Makefile.in
@@ -59,6 +59,7 @@
   $(call mkdir_deps,system_wrappers_js) \
   $(NULL)
 	$(PYTHON) $(srcdir)/Preprocessor.py $(DEFINES) $(ACDEFINES) \
+		-DMOZ_NATIVE_ICU=$(MOZ_NATIVE_ICU) \
 		$(srcdir)/system-headers | $(PERL) $(srcdir)/make-system-wrappers.pl system_wrappers_js
 	$(INSTALL) system_wrappers_js $(DIST)
 
--- comm-beta/mozilla/js/src/config/system-headers
+++ comm-beta/mozilla/js/src/config/system-headers
@@ -1132,3 +1132,16 @@
 spawn.h
 err.h
 xlocale.h
+#if MOZ_NATIVE_ICU==1
+unicode/locid.h
+unicode/numsys.h
+unicode/ucal.h
+unicode/uclean.h
+unicode/ucol.h
+unicode/udat.h
+unicode/udatpg.h
+unicode/uenum.h
+unicode/unum.h
+unicode/ustring.h
+unicode/utypes.h
+#endif
--- comm-beta/mozilla/js/src/configure.in
+++ comm-beta/mozilla/js/src/configure.in
@@ -4247,6 +4247,17 @@
 dnl ECMAScript Internationalization API Support (uses ICU)
 dnl ========================================================
 
+ICU_LIB_NAMES=
+MOZ_NATIVE_ICU=
+MOZ_ARG_WITH_BOOL(system-icu,
+[  --with-system-icu
+			Use system ICU (located with pkgconfig)],
+    MOZ_NATIVE_ICU=1)
+
+if test -n "$MOZ_NATIVE_ICU"; then
+    PKG_CHECK_MODULES(MOZ_ICU, icu-i18n >= 50.1)
+fi
+
 ENABLE_INTL_API=1
 MOZ_ARG_DISABLE_BOOL(intl-api,
 [  --disable-intl-api      Disable the ECMAScript Internationalization API],
@@ -4255,37 +4266,36 @@
 dnl Settings for the implementation of the ECMAScript Internationalization API
 if test -n "$ENABLE_INTL_API"; then
     AC_DEFINE(ENABLE_INTL_API)
-    # We build ICU as a static library.
-    AC_DEFINE(U_STATIC_IMPLEMENTATION)
-
-    case "$OS_TARGET" in
-        WINNT)
-            ICU_LIB_NAMES="icuin icuuc icudt"
-            ;;
-        Darwin|Linux)
-            ICU_LIB_NAMES="icui18n icuuc icudata"
-            ;;
-        *)
-            AC_MSG_ERROR([ECMAScript Internationalization API is not yet supported on this platform])
-    esac
-
-    ICU_LIBS='$(call EXPAND_LIBNAME_PATH,$(ICU_LIB_NAMES),$(DEPTH)/intl/icu/lib)'
-else
-    ICU_LIB_NAMES=
-    ICU_LIBS=
+    if test -z "$MOZ_NATIVE_ICU"; then
+	case "$OS_TARGET" in
+	    WINNT)
+		ICU_LIB_NAMES="icuin icuuc icudt"
+		;;
+	    Darwin|Linux|DragonFly|FreeBSD|NetBSD|OpenBSD)
+		ICU_LIB_NAMES="icui18n icuuc icudata"
+		;;
+	    *)
+		AC_MSG_ERROR([ECMAScript Internationalization API is not yet supported on this platform])
+	esac
+	MOZ_ICU_LIBS='$(call EXPAND_LIBNAME_PATH,$(ICU_LIB_NAMES),$(DEPTH)/intl/icu/lib)'
+    fi
 fi
 
 AC_SUBST(ENABLE_INTL_API)
 AC_SUBST(ICU_LIB_NAMES)
-AC_SUBST(ICU_LIBS)
-
-dnl Source files that use ICU should have control over which parts of the ICU
-dnl namespace they want to use.
-AC_DEFINE(U_USING_ICU_NAMESPACE,0)
+AC_SUBST(MOZ_ICU_LIBS)
+AC_SUBST(MOZ_NATIVE_ICU)
 
 
 dnl Settings for ICU
-if test -n "$ENABLE_INTL_API" ; then
+if test -n "$ENABLE_INTL_API" -a -z "$MOZ_NATIVE_ICU"; then
+    dnl We build ICU as a static library.
+    AC_DEFINE(U_STATIC_IMPLEMENTATION)
+
+    dnl Source files that use ICU should have control over which parts of the I
+    dnl namespace they want to use.
+    AC_DEFINE(U_USING_ICU_NAMESPACE,0)
+
     # Set ICU compile options
     ICU_CPPFLAGS=""
     # don't use icu namespace automatically in client code
--- comm-beta/mozilla/js/src/gdb/Makefile.in
+++ comm-beta/mozilla/js/src/gdb/Makefile.in
@@ -19,6 +19,10 @@
 
 LOCAL_INCLUDES += -I$(topsrcdir) -I..
 
+ifdef MOZ_NATIVE_ICU
+XTRA_LIBS += $(MOZ_ICU_LIBS)
+endif
+
 EXTRA_LIBS += $(MOZ_FFI_LIBS)
 
 # Place a GDB Python auto-load file next to the gdb-tests executable, both
--- comm-beta/mozilla/js/src/jsapi-tests/Makefile.in
+++ comm-beta/mozilla/js/src/jsapi-tests/Makefile.in
@@ -20,6 +20,10 @@
 
 LOCAL_INCLUDES += -I$(topsrcdir) -I..
 
+ifdef MOZ_NATIVE_ICU
+EXTRA_LIBS += $(MOZ_ICU_LIBS)
+endif
+
 EXTRA_LIBS += $(MOZ_FFI_LIBS)
 
 ifdef QEMU_EXE
--- comm-beta/mozilla/js/src/Makefile.in
+++ comm-beta/mozilla/js/src/Makefile.in
@@ -232,12 +232,17 @@
 # ICU headers need to be available whether we build with the complete
 # Internationalization API or not - ICU stubs rely on them.
 
+ifdef MOZ_NATIVE_ICU
+LOCAL_INCLUDES += $(MOZ_ICU_CFLAGS)
+else
 LOCAL_INCLUDES += \
   -I$(topsrcdir)/../../intl/icu/source/common \
   -I$(topsrcdir)/../../intl/icu/source/i18n \
   $(NULL)
+endif
 
 ifdef ENABLE_INTL_API
+ifndef MOZ_NATIVE_ICU
 
 ifeq ($(OS_ARCH),WINNT)
   # Parallel gmake is buggy on Windows
@@ -266,6 +271,7 @@
 	$(call SUBMAKE,$@,intl/icu)
 
 endif
+endif
 
 #
 # END ECMAScript Internationalization API
@@ -389,7 +395,11 @@
 DEFINES += -DUSE_ZLIB
 endif
 
-SHARED_LIBRARY_LIBS += $(ICU_LIBS)
+ifdef MOZ_NATIVE_ICU
+EXTRA_DSO_LDOPTS += $(MOZ_ICU_LIBS)
+else
+SHARED_LIBRARY_LIBS += $(MOZ_ICU_LIBS)
+endif
 
 # Prevent floating point errors caused by VC++ optimizations
 ifdef _MSC_VER
--- comm-beta/mozilla/js/src/shell/Makefile.in
+++ comm-beta/mozilla/js/src/shell/Makefile.in
@@ -27,6 +27,9 @@
 ifdef MOZ_NATIVE_FFI
 EXTRA_LIBS += $(MOZ_FFI_LIBS)
 endif
+ifdef MOZ_NATIVE_ICU
+EXTRA_LIBS += $(MOZ_ICU_LIBS)
+endif
 
 LOCAL_INCLUDES += -I$(topsrcdir) -I..
 
