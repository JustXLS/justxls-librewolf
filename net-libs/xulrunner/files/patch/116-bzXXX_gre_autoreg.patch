Index: xpcom/build/nsXPComInit.cpp
===================================================================
RCS file: /cvsroot/mozilla/xpcom/build/nsXPComInit.cpp,v
retrieving revision 1.261
diff -u -p -8 -r1.261 nsXPComInit.cpp
--- a/xpcom/build/nsXPComInit.cpp	8 Mar 2008 09:50:29 -0000	1.261
+++ b/xpcom/build/nsXPComInit.cpp	2 Apr 2008 20:39:53 -0000
@@ -284,52 +284,63 @@ RegisterGenericFactory(nsIComponentRegis
 // In order to support the installer, we need
 // to be told out of band if we should cause
 // an autoregister.  If the file ".autoreg" exists in the binary
 // directory, we check its timestamp against the timestamp of the
 // compreg.dat file.  If the .autoreg file is newer, we autoregister.
 static PRBool CheckUpdateFile()
 {
     nsresult rv;
-    nsCOMPtr<nsIFile> file;
+
+    nsCOMPtr<nsIFile> pfile;
     rv = nsDirectoryService::gService->Get(NS_XPCOM_CURRENT_PROCESS_DIR, 
                                            NS_GET_IID(nsIFile), 
-                                           getter_AddRefs(file));
-
+                                           getter_AddRefs(pfile));
     if (NS_FAILED(rv)) {
         NS_WARNING("Getting NS_XPCOM_CURRENT_PROCESS_DIR failed");
         return PR_FALSE;
     }
+    pfile->AppendNative(nsDependentCString(".autoreg"));
+    PRBool pexists;
+    pfile->Exists(&pexists);
 
-    file->AppendNative(nsDependentCString(".autoreg"));
-    
-    PRBool exists;
-    file->Exists(&exists);
-    if (!exists)
+
+    nsCOMPtr<nsIFile> gfile;
+    rv = nsDirectoryService::gService->Get(NS_GRE_DIR,
+                                           NS_GET_IID(nsIFile),
+                                           getter_AddRefs(gfile));
+    gfile->AppendNative(nsDependentCString(".autoreg"));
+    PRBool gexists;
+    gfile->Exists(&gexists);
+
+
+    if (!pexists && !gexists)
         return PR_FALSE;
 
     nsCOMPtr<nsIFile> compregFile;
     rv = nsDirectoryService::gService->Get(NS_XPCOM_COMPONENT_REGISTRY_FILE,
                                            NS_GET_IID(nsIFile),
                                            getter_AddRefs(compregFile));
 
     
     if (NS_FAILED(rv)) {
         NS_WARNING("Getting NS_XPCOM_COMPONENT_REGISTRY_FILE failed");
         return PR_FALSE;
     }
 
+    PRBool exists;
     if (NS_FAILED(compregFile->Exists(&exists)) || !exists)
         return PR_TRUE;
 
-    PRInt64 compregModTime, autoregModTime;
+    PRInt64 compregModTime, autoreg1ModTime, autoreg2ModTime;
     compregFile->GetLastModifiedTime(&compregModTime);
-    file->GetLastModifiedTime(&autoregModTime);
+    pfile->GetLastModifiedTime(&autoreg1ModTime);
+    gfile->GetLastModifiedTime(&autoreg2ModTime);
 
-    return LL_CMP(autoregModTime, >, compregModTime);
+    return LL_CMP(PR_MAX(autoreg1ModTime, autoreg2ModTime), >, compregModTime);
 }
 
 
 nsComponentManagerImpl* nsComponentManagerImpl::gComponentManager = NULL;
 PRBool gXPCOMShuttingDown = PR_FALSE;
 
 // For each class that wishes to support nsIClassInfo, add a line like this
 // NS_DECL_CLASSINFO(nsMyClass)
